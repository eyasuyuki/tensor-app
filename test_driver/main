import 'dart:typed_data';

import 'package:flutter/services.dart';
import 'package:flutter_test/flutter_test.dart';
import 'package:mlkit/mlkit.dart';
import 'package:tensor_app/model.dart';
import 'package:image/image.dart' as img;


void main() async {
  testWidgets('LcdModel test', (WidgetTester tester) async {
//    LcdModel model = LcdModel();
//    assert(model != null);

    FirebaseModelInterpreter interpreter = FirebaseModelInterpreter.instance;
    FirebaseModelManager manager = FirebaseModelManager.instance;
    manager.registerLocalModelSource(
        FirebaseLocalModelSource(modelName: "lcd_model", assetFilePath: 'assets/train.tflite'));

    var imageBytes = (await rootBundle.load("assets/n0.png")).buffer;
    assert(imageBytes != null);

    img.Image image = img.decodePng(imageBytes.asUint8List());
    assert(image != null);

    var result = await interpreter.run(
        localModelName: "lcd_model",
        inputOutputOptions: FirebaseModelInputOutputOptions(
            [FirebaseModelIOOption(FirebaseModelDataType.BYTE, [64, 64, 1])],
            [FirebaseModelIOOption(FirebaseModelDataType.BYTE, [1, 10])]),
        inputBytes: imageToByteList(image));
   assert(result != null);
//
//    print("result="+result.toString());
  });
}

// int model
Uint8List imageToByteList(img.Image image) {
  var _inputSize = 64;
  var convertedBytes = new Uint8List(1 * _inputSize * _inputSize * 3);
  var buffer = new ByteData.view(convertedBytes.buffer);
  int pixelIndex = 0;
  for (var i = 0; i < _inputSize; i++) {
    for (var j = 0; j < _inputSize; j++) {
      var pixel = image.getPixel(i, j);
      buffer.setUint8(pixelIndex, (pixel >> 16) & 0xFF);
      pixelIndex++;
      buffer.setUint8(pixelIndex, (pixel >> 8) & 0xFF);
      pixelIndex++;
      buffer.setUint8(pixelIndex, (pixel) & 0xFF);
      pixelIndex++;
    }
  }
  return convertedBytes;
}